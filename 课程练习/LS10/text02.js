//JS执行上下文和调用栈
/*
 * 执行上下文是指 代码执行时的上下文环境（包括局部变量、相关的函数、相关自己变量等） 
 * JS运行时会产生多个执行上下文，处于活动状态的执行上下文环境只有一个
 */

/*调用栈
 * 代码执行时JS引擎会以栈的方式来处理和追踪函数调用（函数调用栈 call stack）
 * 栈底对应的是全局上下文环境，栈顶对应的是当前正在执行的上下文环境
 */

 /*
  * 执行有多种可能时，会形成不同的链式关系，依然遵从静态词法作用域
  * 
  * 执行时，当前执行上下文，对应一个作用域链环境来管理和解析变量函数（动态性）
  * 变量查找按照从内到外的顺序（遵循词法作用域），直到完成查找，若未查询到则报错
  * 当函数之行结束，运行期上下文被销毁，此作用域链环境也随之被释放
  * 
  */








